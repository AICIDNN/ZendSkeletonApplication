{"name":"Zendskeletonapplication","tagline":"Sample application skeleton using the ZF2 MVC layer","body":"ZendSkeletonApplication\r\n=======================\r\n\r\nIntroduction\r\n------------\r\nThis is a simple, skeleton application using the ZF2 MVC layer and module\r\nsystems. This application is meant to be used as a starting place for those\r\nlooking to get their feet wet with ZF2.\r\n\r\nInstallation using Composer\r\n---------------------------\r\n\r\nThe easiest way to create a new ZF2 project is to use [Composer](https://getcomposer.org/). If you don't have it already installed, then please install as per the [documentation](https://getcomposer.org/doc/00-intro.md).\r\n\r\n\r\nCreate your new ZF2 project:\r\n\r\n    composer create-project -n -sdev zendframework/skeleton-application path/to/install\r\n\r\n\r\n\r\n### Installation using a tarball with a local Composer\r\n\r\nIf you don't have composer installed globally then another way to create a new ZF2 project is to download the tarball and install it:\r\n\r\n1. Download the [tarball](https://github.com/zendframework/ZendSkeletonApplication/tarball/master), extract it and then install the dependencies with a locally installed Composer:\r\n\r\n        cd my/project/dir\r\n        curl -#L https://github.com/zendframework/ZendSkeletonApplication/tarball/master | tar xz --strip-components=1\r\n    \r\n\r\n2. Download composer into your project directory and install the dependencies:\r\n\r\n        curl -s https://getcomposer.org/installer | php\r\n        php composer.phar install\r\n\r\nIf you don't have access to curl, then install Composer into your project as per the [documentation](https://getcomposer.org/doc/00-intro.md).\r\n\r\nWeb server setup\r\n----------------\r\n\r\n### PHP CLI server\r\n\r\nThe simplest way to get started if you are using PHP 5.4 or above is to start the internal PHP cli-server in the root\r\ndirectory:\r\n\r\n    php -S 0.0.0.0:8080 -t public/ public/index.php\r\n\r\nThis will start the cli-server on port 8080, and bind it to all network\r\ninterfaces.\r\n\r\n**Note:** The built-in CLI server is *for development only*.\r\n\r\n### Vagrant server\r\n\r\nThis project supports a basic [Vagrant](http://docs.vagrantup.com/v2/getting-started/index.html) configuration with an inline shell provisioner to run the Skeleton Application in a [VirtualBox](https://www.virtualbox.org/wiki/Downloads).\r\n\r\n1. Run vagrant up command\r\n\r\n    vagrant up\r\n\r\n2. Visit [http://localhost:8085](http://localhost:8085) in your browser\r\n\r\nLook in [Vagrantfile](Vagrantfile) for configuration details.\r\n\r\n### Apache setup\r\n\r\nTo setup apache, setup a virtual host to point to the public/ directory of the\r\nproject and you should be ready to go! It should look something like below:\r\n\r\n    <VirtualHost *:80>\r\n        ServerName zf2-app.localhost\r\n        DocumentRoot /path/to/zf2-app/public\r\n        <Directory /path/to/zf2-app/public>\r\n            DirectoryIndex index.php\r\n            AllowOverride All\r\n            Order allow,deny\r\n            Allow from all\r\n            <IfModule mod_authz_core.c>\r\n            Require all granted\r\n            </IfModule>\r\n        </Directory>\r\n    </VirtualHost>\r\n\r\n### Nginx setup\r\n\r\nTo setup nginx, open your `/path/to/nginx/nginx.conf` and add an\r\n[include directive](http://nginx.org/en/docs/ngx_core_module.html#include) below\r\ninto `http` block if it does not already exist:\r\n\r\n    http {\r\n        # ...\r\n        include sites-enabled/*.conf;\r\n    }\r\n\r\n\r\nCreate a virtual host configuration file for your project under `/path/to/nginx/sites-enabled/zf2-app.localhost.conf`\r\nit should look something like below:\r\n\r\n    server {\r\n        listen       80;\r\n        server_name  zf2-app.localhost;\r\n        root         /path/to/zf2-app/public;\r\n\r\n        location / {\r\n            index index.php;\r\n            try_files $uri $uri/ @php;\r\n        }\r\n\r\n        location @php {\r\n            # Pass the PHP requests to FastCGI server (php-fpm) on 127.0.0.1:9000\r\n            fastcgi_pass   127.0.0.1:9000;\r\n            fastcgi_param  SCRIPT_FILENAME /path/to/zf2-app/public/index.php;\r\n            include fastcgi_params;\r\n        }\r\n    }\r\n\r\nRestart the nginx, now you should be ready to go!\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}